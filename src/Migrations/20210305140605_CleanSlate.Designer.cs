// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VSH.Data;
using VSH.Data.Database;
// using VSH.Data.Vipps;

namespace VSH.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20210305140605_CleanSlate")]
    partial class CleanSlate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("VSH.Data.Database.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Slug")
                        .HasColumnType("text")
                        .HasColumnName("slug");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated");

                    b.Property<int>("VisibilityState")
                        .HasColumnType("integer")
                        .HasColumnName("visibility_state");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VSH.Data.Database.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated");

                    b.HasKey("Id")
                        .HasName("pk_documents");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("VSH.Data.Database.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<Order.ContactInformation>("ContactInfo")
                        .HasColumnType("jsonb")
                        .HasColumnName("contact_info");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<string>("OrderReference")
                        .HasColumnType("text")
                        .HasColumnName("order_reference");

                    b.Property<int>("PaymentType")
                        .HasColumnType("integer")
                        .HasColumnName("payment_type");

                    b.Property<List<OrderProduct>>("Products")
                        .HasColumnType("jsonb")
                        .HasColumnName("products");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("VSH.Data.Database.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<List<ProductImage>>("Images")
                        .HasColumnType("jsonb")
                        .HasColumnName("images");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<int>("PriceSuffix")
                        .HasColumnType("integer")
                        .HasColumnName("price_suffix");

                    b.Property<bool>("ShowOnFrontpage")
                        .HasColumnType("boolean")
                        .HasColumnName("show_on_frontpage");

                    b.Property<string>("Slug")
                        .HasColumnType("text")
                        .HasColumnName("slug");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated");

                    b.Property<int>("VisibilityState")
                        .HasColumnType("integer")
                        .HasColumnName("visibility_state");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_products_category_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("VSH.Data.Database.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated");

                    b.Property<string>("Username")
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("Users");
                });
            //
            // modelBuilder.Entity("VSH.Data.Database.VippsResponse", b =>
            //     {
            //         b.Property<Guid>("Id")
            //             .ValueGeneratedOnAdd()
            //             .HasColumnType("uuid")
            //             .HasColumnName("id");
            //
            //         b.Property<VippsPaymentActionResponse>("CancellationResponse")
            //             .HasColumnType("jsonb")
            //             .HasColumnName("cancellation_response");
            //
            //         b.Property<VippsPaymentActionResponse>("CaptureResponse")
            //             .HasColumnType("jsonb")
            //             .HasColumnName("capture_response");
            //
            //         b.Property<DateTime>("Created")
            //             .HasColumnType("timestamp without time zone")
            //             .HasColumnName("created");
            //
            //         b.Property<VippsErrorResponse>("ErrorResponse")
            //             .HasColumnType("jsonb")
            //             .HasColumnName("error_response");
            //
            //         b.Property<VippsPaymentInitiationCallbackResponse>("InitiationResponse")
            //             .HasColumnType("jsonb")
            //             .HasColumnName("initiation_response");
            //
            //         b.Property<Guid>("OrderId")
            //             .HasColumnType("uuid")
            //             .HasColumnName("order_id");
            //
            //         b.Property<VippsGetPaymentDetailsResponse>("PaymentDetailResponse")
            //             .HasColumnType("jsonb")
            //             .HasColumnName("payment_detail_response");
            //
            //         b.Property<VippsPaymentActionResponse>("RefundResponse")
            //             .HasColumnType("jsonb")
            //             .HasColumnName("refund_response");
            //
            //         b.Property<int>("StatusCode")
            //             .HasColumnType("integer")
            //             .HasColumnName("status_code");
            //
            //         b.Property<DateTime?>("Updated")
            //             .HasColumnType("timestamp without time zone")
            //             .HasColumnName("updated");
            //
            //         b.HasKey("Id")
            //             .HasName("pk_vipps_responses");
            //
            //         b.HasIndex("OrderId")
            //             .HasDatabaseName("ix_vipps_responses_order_id");
            //
            //         b.ToTable("VippsResponses");
            //     });

            modelBuilder.Entity("VSH.Data.Database.Product", b =>
                {
                    b.HasOne("VSH.Data.Database.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("fk_products_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("VSH.Data.Database.VippsResponse", b =>
                {
                    b.HasOne("VSH.Data.Database.Order", null)
                        .WithMany("VippsResponses")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("fk_vipps_responses_orders_order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VSH.Data.Database.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("VSH.Data.Database.Order", b =>
                {
                    b.Navigation("VippsResponses");
                });
#pragma warning restore 612, 618
        }
    }
}
